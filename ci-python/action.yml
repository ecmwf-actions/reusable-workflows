name: ci-python
description: A composite action build and test python packages.
inputs:
  requirements_path:
    description: Path to pip requirements file.
    default: requirements.txt
  lib_path:
    description: LD_LIBRARY_PATH containing paths to depedency libraries.
    required: false
  python_version:
    description: The version of python used to test the package
    default: ${{ matrix.python_version }}
  conda_install:
    description: List of packages to install using conda
    required: false
  checkout:
    description: Whether to checkout the repository.
    required: false
  github_token:
    description: Github token with read access to needed repositories.
    required: false
    default: ${{ github.token }}
  repository:
    description: Repository name in format owner/repo@ref.
    required: false
  python_dependencies:
    description: List of python packages to install from source as dependencies. In format owner/repo@ref, multiline for multiple packages.
    required: false

runs:
  using: composite
  steps:
    - name: Parse repository input
      id: inputs
      if: ${{ inputs.checkout == 'true' }}
      shell: python3 {0}
      run: |
        import os
        repo, ref = "${{ inputs.repository }}".split("@")
        with open(os.getenv("GITHUB_OUTPUT"), "a") as f:
            print("repo", repo, sep="=", file=f)
            print("ref", ref, sep="=", file=f)

    - name: Checkout repository
      if: ${{ inputs.checkout == 'true' }}
      uses: actions/checkout@v3
      with:
        repository: ${{ steps.inputs.outputs.repo }}
        ref: ${{ steps.inputs.outputs.ref }}
        token: ${{ inputs.github_token }}

    - name: Setup python env
      shell: bash -e {0}
      run: |
        source /opt/conda/etc/profile.d/conda.sh
        conda create -y -p venv
        conda activate ./venv
        conda install -y python=${{ inputs.python_version }}
        if [ -n "${{ inputs.conda_install }}" ]; then
          conda install -y ${{ inputs.conda_install }}
        fi
        pip install pytest pytest-cov
        if [ -f ${{ inputs.requirements_path }} ]; then
          pip install -r ${{ inputs.requirements_path }} 
        fi

    - name: Install dependencies
      if: ${{ inputs.python_dependencies }}
      shell: bash -e {0}
      run: |
        source /opt/conda/etc/profile.d/conda.sh
        conda activate ./venv

        while IFS= read -r line && [[ -n "$line" ]]; do
          owner="${line%%/*}"
          repo_ref="${line#*/}"
          repo="${repo_ref%%@*}"
          ref="${repo_ref#*@}"
          
          mkdir -p $GITHUB_WORKSPACE/ci-deps/$repo
          cd $GITHUB_WORKSPACE/ci-deps/$repo
          git init
          git remote add origin https://${{ inputs.github_token }}@github.com/$owner/$repo.git
          git fetch --depth 1 origin $ref
          git checkout FETCH_HEAD
          python setup.py sdist
          pip install dist/*
        done <<< "${{ inputs.python_dependencies }}"

    - name: Install package
      shell: bash -e {0}
      run: |
        source /opt/conda/etc/profile.d/conda.sh
        conda activate ./venv
        python setup.py sdist
        pip install dist/*

    - name: Run tests
      env:
        DYLD_LIBRARY_PATH: ${{ inputs.lib_path }}
      shell: bash -e {0}
      run: |
        source /opt/conda/etc/profile.d/conda.sh
        conda activate ./venv
        pytest --cov=./ --cov-report=xml
        python -m coverage report
