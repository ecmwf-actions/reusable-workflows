on:
  workflow_call:
    inputs:
      python-version:
        description: The version of Python binary to use.
        required: false
        default: '3.x'
        type: string
      repository:
        description: The source repository name, in case it differs from the current one. Repository names should
          follow the standard Github `owner/name` format.
        required: false
        default: ${{ github.repository }}
        type: string
      ref:
        description: The source repository reference, in case it differs from the current one.
        required: false
        default: ${{ github.ref }}
        type: string
      install_package:
        description: Install package before running tests.
        required: false
        default: "-e .[all, tests]" 
        type: string
  
jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
      - name: print latest_commit
        run: echo ${{ github.sha }}
      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name

  integration-tests:
    strategy:
      fail-fast: false
      matrix:
        platform: ["ubuntu-latest"]
    name: Run integration tests with Python ${{ inputs.python-version }} 
    runs-on: ${{ matrix.platform }}
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    steps:
        
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip         
          pip install pytest pytest-md pytest-emoji
          python -m pip install ${{ inputs.install_package}}
      - name: Run integration tests
        run: |
          python -m pytest tests/integration --cov=src --cov-report=xml
 

